{"componentChunkName":"component---src-templates-slide-js","path":"/01-postawy-js/","result":{"data":{"site":{"siteMetadata":{"title":"Reaguj na jawie"}},"markdownRemark":{"id":"52cb0550-06e6-5087-b82e-89aad3e2edae","excerpt":"JavaScript jest językiem programowania, który umożliwia tworzenie interaktywnych stron internetowych. To język, który pozwala przeglądarce na wykonywanie…","html":"<p>JavaScript jest językiem programowania, który umożliwia tworzenie interaktywnych stron internetowych. To język, który pozwala przeglądarce na wykonywanie skryptów bezpośrednio na stronie internetowej, co daje nam możliwość dodawania interakcji, animacji, walidacji formularzy i wielu innych funkcji.</p>\n<h3>Typy danych w JavaScript</h3>\n<p>JavaScript ma kilka podstawowych typów danych, które służą do przechowywania różnych rodzajów informacji. Oto najważniejsze z nich:</p>\n<ol>\n<li><strong>String</strong> -  (łańcuch znaków)- typ danych służący do przechowywania tekstów. Tekst jest zawsze otoczony cudzysłowami np.:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JavaScript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"12345\"</span></code></pre></div>\n<ol start=\"2\">\n<li><strong>Number</strong> -  (liczba) - typ danych używany do przechowywania liczb. Może to być liczba całkowita lub liczba zmiennoprzecinkowa np.:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span></code></pre></div>\n<ol start=\"3\">\n<li><strong>Boolean</strong> - (wartość logiczna) typ danych, który przyjmuje jedną z dwóch wartości: <code class=\"language-text\">true</code> lub <code class=\"language-text\">false</code>. Służy do reprezentowania wartości logicznych.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span></code></pre></div>\n<ol start=\"4\">\n<li><strong>Array</strong> - (tablica) typ danych pozwalający na przechowywanie wielu wartości w jednym miejscu. Tablica jest uporządkowanym zbiorem elementów, które można indeksować (pierwszy element ma index 0). Tworzymy ją za pomocą nawiasów kwadratowych, np.:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> John<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">25</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ol start=\"5\">\n<li><strong>Object</strong> - (obiekt) - typ danych, który służy do grupowania powiązanych informacji w jednym miejscu. Obiekt składa się z par klucz-wartość, gdzie klucze są ciągami znaków, a wartości mogą być dowolnego typu. Tworzymy go za pomocą nawiasów klamrowych, np. { name: \"John\", age: 30 }.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token punctuation\">{</span> \r\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> \r\n    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> \r\n    <span class=\"token literal-property property\">city</span><span class=\"token operator\">:</span> <span class=\"token string\">\"New York\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">isActive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> \r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"5\">\n<li><strong>Undefined</strong> - Specjalny typ danych, który oznacza, że zmienna nie została zdefiniowana ani zainicjowana. Jeśli spróbujemy uzyskać dostęp do zmiennej, która nie istnieje, otrzymamy wartość <code class=\"language-text\">undefined</code>.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token keyword\">let</span> x<span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"6\">\n<li><strong>Null</strong> - Specjalny typ danych, który oznacza brak wartości. Możemy jawnie przypisać zmiennej wartość null, aby wskazać, że nie ma żadnej wartości.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"7\">\n<li><strong>Function</strong> (funkcja) to blok kodu, który może być wywoływany wielokrotnie w programie.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Zmienne w JavaScript</h3>\n<p>W JavaScript używamy <strong>zmiennych</strong> do przechowywania danych.  Zmienna jest jak pojemnik, w którym możemy przechowywać różne informacje. Aby zadeklarować zmienną, używamy słowa kluczowego <code class=\"language-text\">let</code> lub <code class=\"language-text\">const</code>, a następnie nadajemy jej nazwę. Na przykład:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Deklaracja zmiennej 'name' i przypisanie jej wartości \"John\"</span>\r\n<span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Deklaracja zmiennej 'age' i przypisanie jej wartości 30</span></code></pre></div>\n<p>Słowo kluczowe <code class=\"language-text\">let</code> oznacza, że zmienna może zmieniać swoją wartość w trakcie działania programu, natomiast <code class=\"language-text\">const</code> oznacza, że zmienna ma stałą wartość, która nie może być zmieniana po przypisaniu.</p>\n<p>Możemy również zadeklarować zmienną bez przypisywania jej początkowej wartości. W takim przypadku zmienna będzie miała wartość <code class=\"language-text\">undefined</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> greeting<span class=\"token punctuation\">;</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>greeting<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Wyświetlenie wartości zmiennej 'greeting' w konsoli</span></code></pre></div>","frontmatter":{"title":"Podstawy JavaScript","id":"2","description":"Podstawy JS"}},"previous":{"fields":{"slug":"/start/"},"frontmatter":{"title":"Start"}},"next":{"fields":{"slug":"/new-beginnings/"},"frontmatter":{"title":"New Beginnings"}}},"pageContext":{"id":"52cb0550-06e6-5087-b82e-89aad3e2edae","previousPostId":"9e1545e6-e602-5945-89a5-90b8dacde7d2","nextPostId":"0baef83e-95ce-5051-9443-fb77a19d98b1"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}